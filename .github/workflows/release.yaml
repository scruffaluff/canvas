name: release
on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
    steps:
      - name: Extract tag
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
        id: extract_tag
  slim:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: wolfgangwazzlestrauss/canvas
          tags: ${{ needs.release.outputs.tag }}-slim
  tag:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        build_arg:
          - python
          - rust
          - typescript
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: wolfgangwazzlestrauss/canvas
          tags: ${{ needs.release.outputs.tag }}-${{ matrix.build_arg }}
          build_args: ${{ matrix.build_arg }}_build="true"
  all:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: wolfgangwazzlestrauss/canvas
          tags: ${{ needs.release.outputs.tag }}
          build_args: python_build="true",rust_build="true",typescript_build="true
